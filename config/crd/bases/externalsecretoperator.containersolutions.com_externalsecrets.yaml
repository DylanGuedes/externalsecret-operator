
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: externalsecrets.externalsecretoperator.containersolutions.com
spec:
  group: externalsecretoperator.containersolutions.com
  names:
    kind: ExternalSecret
    listKind: ExternalSecretList
    plural: externalsecrets
    singular: externalsecret
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ExternalSecret is the Schema for the externalsecrets API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ExternalSecretSpec defines the desired state of ExternalSecret
          properties:
            data:
              description: Secrets
              items:
                description: ExternalSecretData contains Key/Name and Version of keys to be retrieved
                properties:
                  key:
                    description: The Key/Name of the secret held in the ExternalBackend
                    minLength: 1
                    type: string
                  version:
                    description: Version of the secret to be retrieved
                    type: string
                required:
                - key
                type: object
              maxItems: 20
              minItems: 1
              type: array
            refreshInterval:
              description: Secret Rotation Period
              type: string
            storeRef:
              description: SecretStore reference
              properties:
                name:
                  minLength: 1
                  type: string
              required:
              - name
              type: object
            target:
              description: ExternalSecretTarget ...
              properties:
                creationPolicy:
                  type: string
                name:
                  description: 'Name of the target Secret Resource  defaults to .metadata.name of the ExternalSecret. immutable.'
                  type: string
                template:
                  type: object
              type: object
          required:
          - data
          - storeRef
          type: object
        status:
          description: ExternalSecretStatus defines the observed state of ExternalSecret
          properties:
            conditions:
              description: Conditions represent the latest available observations of an object's state
              items:
                description: Description of conditions
                properties:
                  lastTransitionTime:
                    description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: message is a human readable message indicating details about the transition. This may be an empty string.
                    maxLength: 32768
                    type: string
                  observedGeneration:
                    description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                    format: int64
                    minimum: 0
                    type: integer
                  reason:
                    description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                    maxLength: 1024
                    minLength: 1
                    type: string
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    enum:
                    - "True"
                    - "False"
                    - "Unknown"
                    type: string
                  type:
                    description: "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                    maxLength: 316
                    type: string
                required:
                - lastTransitionTime
                - message
                - reason
                - status
                - type
                type: object
              type: array
            phase:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file Defines where the ExternalSecret is in its lifecycle'
              type: string
          required:
          - conditions
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
